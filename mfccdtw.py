# -*- coding: utf-8 -*-
"""mfccDTW.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IPIQHc_RMgWSyGLH8x_ezXnlK4JjhMZ_
"""

import librosa
import numpy as np
from librosa.sequence import dtw

# 音声ファイルからMFCCを抽出する関数
def extract_mfcc(file_path, n_mfcc=13):
    # 音声ファイルを読み込み
    y, sr = librosa.load(file_path, sr=None)

    # MFCC特徴量を抽出
    mfcc = librosa.feature.mfcc(y=y, sr=sr, n_mfcc=n_mfcc)
    return mfcc

# DTW距離を計算する関数
def dtw_distance(mfcc1, mfcc2):
    # DTWを計算
    D, wp = dtw(X=mfcc1, Y=mfcc2, metric='euclidean')

    # 最小コストを返す
    return D[-1, -1]

# 話者の類似性を評価する関数
def evaluate_similarity(file1, file2):
    # 2つの音声ファイルからMFCCを抽出
    mfcc1 = extract_mfcc(file1)
    mfcc2 = extract_mfcc(file2)

    # DTW距離を計算
    distance = dtw_distance(mfcc1, mfcc2)

    return distance

# 音声ファイルのパス
doraemon01 = 'doraemon01.mp3'
doraemon02 = 'doraemon02.mp3'
doraemon03 = 'doraemon03.mp3'
doraemon04 = 'doraemon04.mp3'
doraemon05 = 'doraemon05.mp3'

similar01 = 'similar01.mp3'
similar02 = 'similar02.mp3'
similar03 = 'similar03.mp3'

differ01 = 'differ01.mp3'
differ02 = 'differ02.mp3'

effect = 'effect.mp3'
obake = 'obake.mp3'

# 類似度を評価
distance_score01 = evaluate_similarity(doraemon01, doraemon01)
print('vs doraemon01')
print(f"DTW Distance: {distance_score01:.4f}\n")

distance_score02 = evaluate_similarity(doraemon01, doraemon02)
print('vs doraemon02')
print(f"DTW Distance: {distance_score02:.4f}\n")

distance_score03 = evaluate_similarity(doraemon01, doraemon03)
print('vs doraemon03')
print(f"DTW Distance: {distance_score03:.4f}\n")

distance_score04 = evaluate_similarity(doraemon01, doraemon04)
print('vs doraemon04')
print(f"DTW Distance: {distance_score04:.4f}\n")

distance_score05 = evaluate_similarity(doraemon01, doraemon05)
print('vs doraemon05')
print(f"DTW Distance: {distance_score05:.4f}\n")

distance_score06 = evaluate_similarity(doraemon01, similar01)
print('vs similar01')
print(f"DTW Distance: {distance_score06:.4f}\n")

distance_score07 = evaluate_similarity(doraemon01, similar02)
print('vs similar02')
print(f"DTW Distance: {distance_score07:.4f}\n")

distance_score08 = evaluate_similarity(doraemon01, similar03)
print('vs similar03')
print(f"DTW Distance: {distance_score08:.4f}\n")

distance_score09 = evaluate_similarity(doraemon01, differ01)
print('vs differ01')
print(f"DTW Distance: {distance_score09:.4f}\n")

distance_score10 = evaluate_similarity(doraemon01, differ02)
print('vs differ02')
print(f"DTW Distance: {distance_score10:.4f}\n")

distance_score11 = evaluate_similarity(doraemon01, effect)
print('vs effect')
print(f"DTW Distance: {distance_score11:.4f}\n")

distance_score12 = evaluate_similarity(doraemon01, obake)
print('vs obake')
print(f"DTW Distance: {distance_score12:.4f}\n")